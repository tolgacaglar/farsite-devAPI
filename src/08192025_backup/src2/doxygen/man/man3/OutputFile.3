.TH "OutputFile" 3 "farsite4P" \" -*- nroff -*-
.ad l
.nh
.SH NAME
OutputFile \- This class aggregates fire behavior parameters on the 'raster
 grid' using the UTM easting and northing values\&. This data is then written to a raster file in either GRASS or ARC/Info Grid format\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fR#include <fsx4\&.hpp>\fP
.PP
Inherited by \fBRasterize\fP, and \fBVectorize\fP\&.
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBRastData\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBOutputFile\fP ()"
.br
.ti -1c
.RI "\fB~OutputFile\fP ()"
.br
.ti -1c
.RI "void \fBsetHeaderType\fP (long type)"
.br
.ti -1c
.RI "void \fBSelectOutputs\fP (long Type)"
.br
.ti -1c
.RI "void \fBSelectMemOutputs\fP (long Type)"
.br
.ti -1c
.RI "void \fBOptionalOutput\fP (bool FromMemory)"
.br
.ti -1c
.RI "void \fBConvF\fP ()"
.br
.ti -1c
.RI "void \fBInitRasterFiles\fP (long \fBHeaderType\fP)"
.br
.ti -1c
.RI "void \fBGetRasterExtent\fP ()"
.br
.in -1c
.SS "Protected Types"

.in +1c
.ti -1c
.RI "enum \fBCalcType\fP { \fBFLAME_LENGTH\fP, \fBHEAT_PER_AREA\fP, \fBFL_AND_HPA\fP, \fBCROWNFIRE\fP, \fBFIRELINE_INTENSITY\fP, \fBREACTION_INTENSITY\fP }"
.br
.ti -1c
.RI "typedef std::pair< long, long > \fBcoordinate\fP"
.br
.ti -1c
.RI "typedef std::map< \fBcoordinate\fP, \fBRastData\fP > \fBRasterMap\fP"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBCalcs\fP (\fBCalcType\fP TYPE)"
.br
.ti -1c
.RI "void \fBFreeRastData\fP ()"
.br
.ti -1c
.RI "bool \fBSetRastData\fP (double xpt, double ypt, double time, double fli, double ros, double rcx, long dir)"
.br
.RI "Aggregates the provided set of fire behavior characteristics onto the raster\&. 
.br
 "
.ti -1c
.RI "void \fBWriteOptionalFile\fP ()"
.br
.RI "Writes a single value to the already opened, already positioned output file\&. 
.br
 "
.ti -1c
.RI "void \fBWriteRastMemFiles\fP ()"
.br
.ti -1c
.RI "bool \fBRastMemFile\fP (long Type)"
.br
.ti -1c
.RI "void \fBWriteFile\fP (long Type)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "FILE * \fBotpfile\fP"
.br
.ti -1c
.RI "double \fBx\fP"
.br
.ti -1c
.RI "double \fBy\fP"
.br
.ti -1c
.RI "double \fBt\fP"
.br
.ti -1c
.RI "double \fBf\fP"
.br
.ti -1c
.RI "double \fBl\fP"
.br
.ti -1c
.RI "double \fBr\fP"
.br
.ti -1c
.RI "double \fBh\fP"
.br
.ti -1c
.RI "double \fBrx\fP"
.br
.ti -1c
.RI "double \fBNorth\fP"
.br
.ti -1c
.RI "double \fBSouth\fP"
.br
.ti -1c
.RI "double \fBEast\fP"
.br
.ti -1c
.RI "double \fBWest\fP"
.br
.ti -1c
.RI "long \fBc\fP"
.br
.ti -1c
.RI "long \fBd\fP"
.br
.ti -1c
.RI "double \fBconvf1\fP"
.br
.ti -1c
.RI "double \fBconvf2\fP"
.br
.ti -1c
.RI "double \fBconvf3\fP"
.br
.ti -1c
.RI "long \fBfilepos\fP"
.br
.ti -1c
.RI "long \fBFileOutput\fP"
.br
.ti -1c
.RI "long \fBnumrows\fP"
.br
.ti -1c
.RI "long \fBnumcols\fP"
.br
.ti -1c
.RI "long \fBNumRastAlloc\fP"
.br
.ti -1c
.RI "long \fBNumRastData\fP"
.br
.ti -1c
.RI "long \fBHeaderType\fP"
.br
.ti -1c
.RI "\fBRasterMap\fP \fBrd\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class aggregates fire behavior parameters on the 'raster
 grid' using the UTM easting and northing values\&. This data is then written to a raster file in either GRASS or ARC/Info Grid format\&. 

This class has been altered during the conversion from GUI to GUI-less operation\&. The original code used the file to aggregate fire behavior parameters onto the grid\&. This code aggregates fire behavior using a std::map<> which is keyed with the grid index\&. This change was effected because the liberal use of ftell() and \fBfseek()\fP did not turn out to be portable when converted over to linux\&. Replacement numbers were written in the \fImiddle\fP of existing numeric fields\&. The current version writes the \fIentire\fP raster out whenever \fBSelectOutputs()\fP or \fBSelectMemOutputs()\fP is called\&. 
.PP
This change necessitated a change in the usage pattern of this class\&. Formerly, whenever the data were dumped to the file, the in-memory cache was flushed and the process of aggregating points started all over again\&. The former usage was to "flush early, flush often"\&. Current usage requires a bit more restraint, due to the fact that the entire file is rewritten every time\&. I now have FARSITE configured to call \fBSelectMemOutputs()\fP whenever \fBTFarsiteInterface::FarsiteSimulationLoop()\fP exits\&. 
.PP
Finally, the change to the use of std::map<> offloads the memory management from this class to the C++ standard library\&. 
.PP
Definition at line \fB329\fP of file \fBfsx4\&.hpp\fP\&.
.SH "Member Typedef Documentation"
.PP 
.SS "typedef std::pair<long, long> \fBOutputFile::coordinate\fP\fR [protected]\fP"

.PP
Definition at line \fB335\fP of file \fBfsx4\&.hpp\fP\&.
.SS "typedef std::map<\fBcoordinate\fP, \fBRastData\fP> \fBOutputFile::RasterMap\fP\fR [protected]\fP"

.PP
Definition at line \fB346\fP of file \fBfsx4\&.hpp\fP\&.
.SH "Member Enumeration Documentation"
.PP 
.SS "enum \fBOutputFile::CalcType\fP\fR [protected]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIFLAME_LENGTH \fP\fP
.TP
\fB\fIHEAT_PER_AREA \fP\fP
.TP
\fB\fIFL_AND_HPA \fP\fP
.TP
\fB\fICROWNFIRE \fP\fP
.TP
\fB\fIFIRELINE_INTENSITY \fP\fP
.TP
\fB\fIREACTION_INTENSITY \fP\fP
.PP
Definition at line \fB359\fP of file \fBfsx4\&.hpp\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "OutputFile::OutputFile ()"

.PP
Definition at line \fB30\fP of file \fBfsxwfotp\&.cpp\fP\&.
.SS "OutputFile::~OutputFile ()"

.PP
Definition at line \fB38\fP of file \fBfsxwfotp\&.cpp\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void OutputFile::Calcs (\fBCalcType\fP TYPE)\fR [protected]\fP"

.PP
Definition at line \fB278\fP of file \fBfsxwfotp\&.cpp\fP\&.
.SS "void OutputFile::ConvF ()"

.PP
Definition at line \fB363\fP of file \fBfsxwfotp\&.cpp\fP\&.
.SS "void OutputFile::FreeRastData ()\fR [protected]\fP"

.PP
Definition at line \fB498\fP of file \fBfsxwfotp\&.cpp\fP\&.
.SS "void OutputFile::GetRasterExtent ()"

.PP
Definition at line \fB472\fP of file \fBfsxwfotp\&.cpp\fP\&.
.SS "void OutputFile::InitRasterFiles (long HeaderType)"

.PP
Definition at line \fB375\fP of file \fBfsxwfotp\&.cpp\fP\&.
.SS "void OutputFile::OptionalOutput (bool FromMemory)"

.PP
Definition at line \fB195\fP of file \fBfsxwfotp\&.cpp\fP\&.
.SS "bool OutputFile::RastMemFile (long Type)\fR [protected]\fP"

.PP
Definition at line \fB100\fP of file \fBfsxwfotp\&.cpp\fP\&.
.SS "void OutputFile::SelectMemOutputs (long Type)"

.PP
Definition at line \fB62\fP of file \fBfsxwfotp\&.cpp\fP\&.
.SS "void OutputFile::SelectOutputs (long Type)"

.PP
Definition at line \fB44\fP of file \fBfsxwfotp\&.cpp\fP\&.
.SS "void OutputFile::setHeaderType (long type)\fR [inline]\fP"

.PP
Definition at line \fB376\fP of file \fBfsx4\&.hpp\fP\&.
.SS "bool OutputFile::SetRastData (double xpt, double ypt, double time, double fli, double ros, double rcx, long dir)\fR [protected]\fP"

.PP
Aggregates the provided set of fire behavior characteristics onto the raster\&. 
.br
 The client code supplies a location (xpt, ypt) expressed in real world coordinates (UTM), and the associated fire behavior characteristics (time, fli, ros, rcx, dir)\&. This method translates the location into a grid cell index (i,j) and stores the fire behavior data for that cell\&. 
.br
 
.PP
In most cases, if the cell already contains a data value, the old value is simply overwritten by the new value\&. Time of arrival is an exception to this rule\&. The resultant value for the grid cell is the minimum of all the time values assigned\&. 
.PP
Definition at line \fB523\fP of file \fBfsxwfotp\&.cpp\fP\&.
.SS "void OutputFile::WriteFile (long Type)\fR [protected]\fP"

.PP
Definition at line \fB398\fP of file \fBfsxwfotp\&.cpp\fP\&.
.SS "void OutputFile::WriteOptionalFile ()\fR [protected]\fP"

.PP
Writes a single value to the already opened, already positioned output file\&. 
.br
 
.PP
Definition at line \fB244\fP of file \fBfsxwfotp\&.cpp\fP\&.
.SS "void OutputFile::WriteRastMemFiles ()\fR [protected]\fP"

.PP
Definition at line \fB79\fP of file \fBfsxwfotp\&.cpp\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "long OutputFile::c\fR [protected]\fP"

.PP
Definition at line \fB349\fP of file \fBfsx4\&.hpp\fP\&.
.SS "double OutputFile::convf1\fR [protected]\fP"

.PP
Definition at line \fB350\fP of file \fBfsx4\&.hpp\fP\&.
.SS "double OutputFile::convf2\fR [protected]\fP"

.PP
Definition at line \fB350\fP of file \fBfsx4\&.hpp\fP\&.
.SS "double OutputFile::convf3\fR [protected]\fP"

.PP
Definition at line \fB350\fP of file \fBfsx4\&.hpp\fP\&.
.SS "long OutputFile::d\fR [protected]\fP"

.PP
Definition at line \fB349\fP of file \fBfsx4\&.hpp\fP\&.
.SS "double OutputFile::East\fR [protected]\fP"

.PP
Definition at line \fB348\fP of file \fBfsx4\&.hpp\fP\&.
.SS "double OutputFile::f\fR [protected]\fP"

.PP
Definition at line \fB347\fP of file \fBfsx4\&.hpp\fP\&.
.SS "long OutputFile::FileOutput\fR [protected]\fP"

.PP
Definition at line \fB352\fP of file \fBfsx4\&.hpp\fP\&.
.SS "long OutputFile::filepos\fR [protected]\fP"

.PP
Definition at line \fB351\fP of file \fBfsx4\&.hpp\fP\&.
.SS "double OutputFile::h\fR [protected]\fP"

.PP
Definition at line \fB347\fP of file \fBfsx4\&.hpp\fP\&.
.SS "long OutputFile::HeaderType\fR [protected]\fP"

.PP
Definition at line \fB356\fP of file \fBfsx4\&.hpp\fP\&.
.SS "double OutputFile::l\fR [protected]\fP"

.PP
Definition at line \fB347\fP of file \fBfsx4\&.hpp\fP\&.
.SS "double OutputFile::North\fR [protected]\fP"

.PP
Definition at line \fB348\fP of file \fBfsx4\&.hpp\fP\&.
.SS "long OutputFile::numcols\fR [protected]\fP"

.PP
Definition at line \fB353\fP of file \fBfsx4\&.hpp\fP\&.
.SS "long OutputFile::NumRastAlloc\fR [protected]\fP"

.PP
Definition at line \fB354\fP of file \fBfsx4\&.hpp\fP\&.
.SS "long OutputFile::NumRastData\fR [protected]\fP"

.PP
Definition at line \fB355\fP of file \fBfsx4\&.hpp\fP\&.
.SS "long OutputFile::numrows\fR [protected]\fP"

.PP
Definition at line \fB353\fP of file \fBfsx4\&.hpp\fP\&.
.SS "FILE* OutputFile::otpfile\fR [protected]\fP"

.PP
Definition at line \fB334\fP of file \fBfsx4\&.hpp\fP\&.
.SS "double OutputFile::r\fR [protected]\fP"

.PP
Definition at line \fB347\fP of file \fBfsx4\&.hpp\fP\&.
.SS "\fBRasterMap\fP OutputFile::rd\fR [protected]\fP"

.PP
Definition at line \fB357\fP of file \fBfsx4\&.hpp\fP\&.
.SS "double OutputFile::rx\fR [protected]\fP"

.PP
Definition at line \fB347\fP of file \fBfsx4\&.hpp\fP\&.
.SS "double OutputFile::South\fR [protected]\fP"

.PP
Definition at line \fB348\fP of file \fBfsx4\&.hpp\fP\&.
.SS "double OutputFile::t\fR [protected]\fP"

.PP
Definition at line \fB347\fP of file \fBfsx4\&.hpp\fP\&.
.SS "double OutputFile::West\fR [protected]\fP"

.PP
Definition at line \fB348\fP of file \fBfsx4\&.hpp\fP\&.
.SS "double OutputFile::x\fR [protected]\fP"

.PP
Definition at line \fB347\fP of file \fBfsx4\&.hpp\fP\&.
.SS "double OutputFile::y\fR [protected]\fP"

.PP
Definition at line \fB347\fP of file \fBfsx4\&.hpp\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for farsite4P from the source code\&.
