.TH "C:/Users/tolk1/Dropbox/SDSC/WiFire/farsite-devAPI/src2/nrutil.h" 3 "farsite4P" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/tolk1/Dropbox/SDSC/WiFire/farsite-devAPI/src2/nrutil.h
.SH SYNOPSIS
.br
.PP
.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBSIGN\fP(a,  b)   ((b) > 0\&.0 ? fabs(a) : \-fabs(a))"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBnrerror\fP (char error_text[])"
.br
.ti -1c
.RI "float * \fBfvector\fP (long nl, long nh)"
.br
.ti -1c
.RI "double * \fBvector\fP (long nl, long nh)"
.br
.ti -1c
.RI "long * \fBivector\fP (long nl, long nh)"
.br
.ti -1c
.RI "unsigned char * \fBcvector\fP (long nl, long nh)"
.br
.ti -1c
.RI "unsigned long * \fBlvector\fP (long nl, long nh)"
.br
.ti -1c
.RI "double * \fBdvector\fP (long nl, long nh)"
.br
.ti -1c
.RI "double ** \fBmatrix\fP (long nrl, long nrh, long ncl, long nch)"
.br
.ti -1c
.RI "double ** \fBdmatrix\fP (long nrl, long nrh, long ncl, long nch)"
.br
.ti -1c
.RI "long ** \fBimatrix\fP (long nrl, long nrh, long ncl, long nch)"
.br
.ti -1c
.RI "double ** \fBsubmatrix\fP (double **a, long oldrl, long oldrh, long oldcl, long oldc, long newrl, long newcl)"
.br
.ti -1c
.RI "double ** \fBconvert_matrix\fP (double *a, long nrl, long nrh, long ncl, long nch)"
.br
.ti -1c
.RI "double *** \fBf3tensor\fP (long nrl, long nrh, long ncl, long nch, long ndl, long ndh)"
.br
.ti -1c
.RI "void \fBfree_fvector\fP (float *v, long nl, long nh)"
.br
.ti -1c
.RI "void \fBfree_vector\fP (double *v, long nl, long nh)"
.br
.ti -1c
.RI "void \fBfree_ivector\fP (long *v, long nl, long nh)"
.br
.ti -1c
.RI "void \fBfree_cvector\fP (unsigned char *v, long nl, long nh)"
.br
.ti -1c
.RI "void \fBfree_lvector\fP (unsigned long *v, long nl, long nh)"
.br
.ti -1c
.RI "void \fBfree_dvector\fP (double *v, long nl, long nh)"
.br
.ti -1c
.RI "void \fBfree_matrix\fP (double **m, long nrl, long nrh, long ncl, long nch)"
.br
.ti -1c
.RI "void \fBfree_dmatrix\fP (double **m, long nrl, long nrh, long ncl, long nch)"
.br
.ti -1c
.RI "void \fBfree_imatrix\fP (long **m, long nrl, long nrh, long ncl, long nch)"
.br
.ti -1c
.RI "void \fBfree_submatrix\fP (double **b, long nrl, long nrh, long ncl, long nch)"
.br
.ti -1c
.RI "void \fBfree_convert_matrix\fP (double **b, long nrl, long nrh, long ncl, long nch)"
.br
.ti -1c
.RI "void \fBfree_f3tensor\fP (double ***t, long nrl, long nrh, long ncl, long nch, long ndl, long ndh)"
.br
.in -1c
.SH "Macro Definition Documentation"
.PP 
.SS "#define SIGN(a, b)   ((b) > 0\&.0 ? fabs(a) : \-fabs(a))"

.PP
Definition at line \fB59\fP of file \fBnrutil\&.h\fP\&.
.SH "Function Documentation"
.PP 
.SS "double ** convert_matrix (double * a, long nrl, long nrh, long ncl, long nch)"

.PP
Definition at line \fB195\fP of file \fBnrutil\&.cpp\fP\&.
.SS "unsigned char * cvector (long nl, long nh)"

.PP
Definition at line \fB77\fP of file \fBnrutil\&.cpp\fP\&.
.SS "double ** dmatrix (long nrl, long nrh, long ncl, long nch)"

.PP
Definition at line \fB133\fP of file \fBnrutil\&.cpp\fP\&.
.SS "double * dvector (long nl, long nh)"

.PP
Definition at line \fB101\fP of file \fBnrutil\&.cpp\fP\&.
.SS "double *** f3tensor (long nrl, long nrh, long ncl, long nch, long ndl, long ndh)"

.PP
Definition at line \fB218\fP of file \fBnrutil\&.cpp\fP\&.
.SS "void free_convert_matrix (double ** b, long nrl, long nrh, long ncl, long nch)"

.PP
Definition at line \fB324\fP of file \fBnrutil\&.cpp\fP\&.
.SS "void free_cvector (unsigned char * v, long nl, long nh)"

.PP
Definition at line \fB286\fP of file \fBnrutil\&.cpp\fP\&.
.SS "void free_dmatrix (double ** m, long nrl, long nrh, long ncl, long nch)"

.PP
Definition at line \fB307\fP of file \fBnrutil\&.cpp\fP\&.
.SS "void free_dvector (double * v, long nl, long nh)"

.PP
Definition at line \fB296\fP of file \fBnrutil\&.cpp\fP\&.
.SS "void free_f3tensor (double *** t, long nrl, long nrh, long ncl, long nch, long ndl, long ndh)"

.PP
Definition at line \fB329\fP of file \fBnrutil\&.cpp\fP\&.
.SS "void free_fvector (float * v, long nl, long nh)"

.PP
Definition at line \fB271\fP of file \fBnrutil\&.cpp\fP\&.
.SS "void free_imatrix (long ** m, long nrl, long nrh, long ncl, long nch)"

.PP
Definition at line \fB313\fP of file \fBnrutil\&.cpp\fP\&.
.SS "void free_ivector (long * v, long nl, long nh)"

.PP
Definition at line \fB281\fP of file \fBnrutil\&.cpp\fP\&.
.SS "void free_lvector (unsigned long * v, long nl, long nh)"

.PP
Definition at line \fB291\fP of file \fBnrutil\&.cpp\fP\&.
.SS "void free_matrix (double ** m, long nrl, long nrh, long ncl, long nch)"

.PP
Definition at line \fB301\fP of file \fBnrutil\&.cpp\fP\&.
.SS "void free_submatrix (double ** b, long nrl, long nrh, long ncl, long nch)"

.PP
Definition at line \fB319\fP of file \fBnrutil\&.cpp\fP\&.
.SS "void free_vector (double * v, long nl, long nh)"

.PP
Definition at line \fB276\fP of file \fBnrutil\&.cpp\fP\&.
.SS "float * fvector (long nl, long nh)"

.PP
Definition at line \fB41\fP of file \fBnrutil\&.cpp\fP\&.
.SS "long ** imatrix (long nrl, long nrh, long ncl, long nch)"

.PP
Definition at line \fB138\fP of file \fBnrutil\&.cpp\fP\&.
.SS "long * ivector (long nl, long nh)"

.PP
Definition at line \fB65\fP of file \fBnrutil\&.cpp\fP\&.
.SS "unsigned long * lvector (long nl, long nh)"

.PP
Definition at line \fB89\fP of file \fBnrutil\&.cpp\fP\&.
.SS "double ** matrix (long nrl, long nrh, long ncl, long nch)"

.PP
Definition at line \fB106\fP of file \fBnrutil\&.cpp\fP\&.
.SS "void nrerror (char error_text[])"

.PP
Definition at line \fB33\fP of file \fBnrutil\&.cpp\fP\&.
.SS "double ** submatrix (double ** a, long oldrl, long oldrh, long oldcl, long oldc, long newrl, long newcl)"

.PP
Definition at line \fB172\fP of file \fBnrutil\&.cpp\fP\&.
.SS "double * vector (long nl, long nh)"

.PP
Definition at line \fB53\fP of file \fBnrutil\&.cpp\fP\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for farsite4P from the source code\&.
